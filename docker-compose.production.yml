services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
      POSTGRES_DB: ${POSTGRES_DB:-facebook_analysis}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-appuser} -d ${POSTGRES_DB:-facebook_analysis}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  n8n:
    # Using custom build with uvx and git for MCP server support
    build: .
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST:-0.0.0.0}
      - N8N_PORT=${N8N_PORT:-5678}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-UTC}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:?Set N8N_ENCRYPTION_KEY}
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_CORS_ORIGIN=${N8N_CORS_ORIGIN}
      - N8N_CORS_ALLOW_METHODS=GET,POST,OPTIONS,PUT,PATCH,DELETE
      - N8N_CORS_ALLOW_HEADERS=Accept,Authorization,Content-Type,Origin,Referer,User-Agent,X-Requested-With
      - N8N_CORS_ALLOW_CREDENTIALS=true
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:?Set N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:?Set N8N_BASIC_AUTH_PASSWORD}
      - N8N_SECURE_COOKIE=false
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
  
  adminer:
    image: adminer
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  pgdata:
  n8n_data:

networks:
  app-network:
    driver: bridge
