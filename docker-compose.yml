services:
  postgres:
    image: postgres:16
    container_name: local-postgres
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
      POSTGRES_DB: facebook_analysis
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U appuser -d facebook_analysis']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  adminer:
    image: adminer
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    networks:
      - app-network

  n8n:
    build: .
    container_name: n8n
    ports:
      - '5678:5678'
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=Europe/Tbilisi
      - N8N_ENCRYPTION_KEY=<replace_with_a_random_32+_char_secret>
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_CORS_ORIGIN=http://localhost:5173,http://localhost:5174
      - N8N_CORS_ALLOW_METHODS=GET,POST,OPTIONS
      - N8N_CORS_ALLOW_HEADERS=Accept,Authorization,Content-Type,Origin,Referer,User-Agent
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sentiment-backend
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=facebook_analysis
      - DATABASE_USER=appuser
      - DATABASE_PASSWORD=apppass
      - JWT_SECRET=your-secret-key-change-in-production
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook/ingest/scrape
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # Frontend service (production)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: sentiment-frontend
  #   ports:
  #     - "5173:80"
  #   depends_on:
  #     - backend
  #   networks:
  #     - app-network
  #   restart: unless-stopped

  # Frontend dev service (with hot reload)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: sentiment-frontend-dev
    environment:
      - VITE_API_PROXY_TARGET=http://backend:3000
      - VITE_API_BASE_URL=/api
      - VITE_DEV_SERVER_PORT=5173
    ports:
      - '5174:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  pgdata:
  n8n_data:

networks:
  app-network:
    driver: bridge
